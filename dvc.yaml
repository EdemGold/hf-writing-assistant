vars:
  - final-data-train: data/train.csv
  - final-data-test: data/test.csv
  - final-data-test-orig: data/test-input.txt
  - final-data-test-cor: data/test-target.txt
  - final-model: models/pytorch_model.bin
  - final-predictions: outputs/predictions.txt
  - edits-hyp: outputs/edits-hyp.txt
  - edits-gold: outputs/edits-gold.txt
  - results: results.json
stages:
  prepare-data:
    cmd: python -m src.prepare_dataset
      && errant_parallel -orig ${final-data-test-orig} -cor ${final-data-test-cor} -out ${edits-gold}
    deps:
      - src/prepare_dataset.py
    outs:
      - ${final-data-train}
      - ${final-data-test}
  train:
    cmd: python -m src.train
      --model_name=${model_name}
      --batch_size=${batch_size}
      --learning_rate=${learning_rate}
      --num_train_epochs=${epochs}
    params:
      - model_name
      - batch_size
      - learning_rate
      - epochs
    deps:
      - src/train.py
      - ${final-data-train}
      - ${final-data-test}
    outs:
      - ${final-model}
  tag:
    cmd: python -m src.tag  --model_name models/ --test_csv ${final-data-test} --out_path ${final-predictions}
    deps:
      - src/tag.py
      - ${final-model}
      - ${final-data-test}
    outs:
      - ${final-predictions}
  evaluate:
    cmd: errant_parallel -orig ${final-data-test-orig} -cor ${final-predictions} -out ${edits-hyp}
      && errant_compare -hyp ${edits-hyp} -ref ${edits-gold} -cat 2 -json_path ${results}
      && cat ${results}
      && python -c 'from src.utils import log_metrics; log_metrics("models/args.json", "${results}", "${final-predictions}")'
    deps:
      - ${edits-gold}
      - ${final-data-test-orig}
      - ${final-predictions}
    outs:
      - ${edits-hyp}
    metrics:
      - ${results}:
          cache: false
  # upload-to-hub:
  #   cmd: python -c 'from happytransformer import HappyTextToText; model = HappyTextToText(model_name = "models/"); model.model.push_to_hub("${hub_repo_name}", use_auth_token=True); model.tokenizer.push_to_hub("${hub_repo_name}", use_auth_token=True)'
  #   params:
  #     - hub_repo_name
  #   deps:
  #     - ${final-model}
